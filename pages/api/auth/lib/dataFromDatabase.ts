import clientPromise from './mongodb';
import { convertFromRaw, convertToRaw, EditorState } from 'draft-js';


export async function getDataFromDatabase(userId: any) {

  const client = await clientPromise;
  const database = client.db('notes');
  const collection = database.collection('chek');
  const query = userId ? { userId } : {};
  const data = await collection.find(query).toArray();
  console.log("(üëç‚âñ‚Äø‚Äø‚âñ)üëç ‚úø file: dataFromDatabase.ts:23 ‚úø getDataFromDatabase ‚úø  data[0].body:", data[0].body)

  // –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Å—ã—Ä–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ –≤ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
  const contentState = convertFromRaw(data[0].body);
  // const text = contentState.getPlainText();
  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∏–∑ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
  // const text = contentState.getPlainText();

  // const newEditorState = EditorState.createWithContent(contentState);

  return data[0].body;
}




// –í –æ–±—â–µ–º —Ç—É —Ç—è –æ—Ç–ø—Ä–∞–≤–ª—è—é –¥–∞–Ω–Ω—ã–µ –Ω–∞ –±–∞–∑—É –º–æ–Ω–æ–≥–æ.
export async function updateDataInDatabase(data: any) {
  const options = { upsert: true };
  const client = await clientPromise;
  const database = client.db('notes');
  const collection = database.collection('chek');
  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—ã—Ä–æ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö - —ç—Ç–æ –æ–±—ä–µ–∫—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ draft js
  // –≠—Ç–æ—Ç –æ–±—ä–µ–∫—Ç –º—ã –º–æ–∂–µ–º –ø–æ–ª—É—á–∏—Ç—å —Å –ø–æ–º–æ—â—å—é converToRaw –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–±—ä–µ–∫—Ç ContentState –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞–º —Å—ã—Ä–æ–π –æ–±—ä–µ–∫—Ç.
  // —Ç–∞–∫–æ–π –æ–±—ä–µ–∫—Ç –º–æ–∂–Ω–æ –≥–¥–µ —Ç–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã–µ –∏–ª–∏ –µ—â–µ –≥–¥–µ —Ç–æ. –í –æ–±—â–µ–º –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã–µ.
  await collection.updateOne(
    { $and: [{ email: data.email }, { userId: data.userId }] },
    { $set: { body: data.body } },
    options
  );
}
